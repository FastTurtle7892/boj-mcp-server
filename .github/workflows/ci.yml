# .github/workflows/ci.yml

name: FastMCP CI Tests

on:
  # Pull Request가 열리거나 업데이트될 때 실행
  pull_request:
    branches: [ main ]
  # main 브랜치에 직접 푸시될 때 실행
  push:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 코드 체크아웃 (저장소 코드 가져오기)
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Python 환경 설정 (pyproject.toml과 일치)
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' 

    # 3. 'uv' 설치 (종속성 관리에 필요한 도구)
    - name: Install uv
      # uv는 rust로 작성되어 매우 빠르지만, GitHub Actions에 기본 설치되어 있지 않을 수 있습니다.
      # 종속성 설치 전, uv를 먼저 설치합니다.
      run: pip install uv
      
    # 4. 의존성 설치 (pyproject.toml 기반)
    # --dev 플래그를 사용하여 [tool.uv.dev-dependencies] 섹션에 정의된 
    # pytest, pytest-asyncio 등 개발 종속성까지 모두 설치합니다.
    - name: Install dependencies (using uv sync)
      run: |
        uv sync --dev 
        
    # 5. 테스트 실행
    - name: Run tests with pytest
      # pytest 명령어가 uv 환경 내에서 실행됩니다.
      run: pytest -v --strict-markers